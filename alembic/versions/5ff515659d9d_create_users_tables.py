"""create_users_tables

Revision ID: 5ff515659d9d
Revises: 010b112a5fb0
Create Date: 2025-09-02 04:03:08.738315

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "5ff515659d9d"
down_revision: Union[str, Sequence[str], None] = "010b112a5fb0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create users table first without the circular FK
    op.create_table(
        "users",
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=True),
        sa.Column("password_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("service_user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["member_id"],
            ["members.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Create service_users table
    op.create_table(
        "service_users",
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("segment_key", sa.JSON(), nullable=False),
        sa.Column("segment_hash", sa.LargeBinary(), nullable=False),
        sa.Column("service_id", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["services.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("segment_hash", name="uq_service_user_segment_hash"),
    )

    # Now add the circular FK constraint
    op.create_foreign_key(
        "fk_users_service_user_id",
        "users",
        "service_users",
        ["service_user_id"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the circular FK first
    op.drop_constraint("fk_users_service_user_id", "users", type_="foreignkey")
    op.drop_table("service_users")
    op.drop_table("users")
    # ### end Alembic commands ###
