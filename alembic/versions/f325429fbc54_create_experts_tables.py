"""create_experts_tables

Revision ID: f325429fbc54
Revises: 9219d56a01d0
Create Date: 2025-09-02 03:53:55.682723

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "f325429fbc54"
down_revision: Union[str, Sequence[str], None] = "9219d56a01d0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "experts",
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("prompt", sa.Text(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("model_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("draft", "active", "archive", "historical", name="expertstatus"),
            nullable=False,
        ),
        sa.Column("input_params", sa.JSON(), nullable=True),
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_index("idx_experts_status", "experts", ["status"], unique=False)
    op.create_index("idx_experts_team_id", "experts", ["team_id"], unique=False)
    op.create_table(
        "expert_services",
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("expert_id", sa.Integer(), nullable=False),
        sa.Column("service_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["expert_id"],
            ["experts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("expert_id", "service_id", name="uq_expert_service"),
    )
    op.create_table(
        "expert_workflows",
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("expert_id", sa.Integer(), nullable=False),
        sa.Column("workflow_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["expert_id"],
            ["experts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("expert_id", "workflow_id", name="uq_expert_workflow"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("expert_workflows")
    op.drop_table("expert_services")
    op.drop_index("idx_experts_team_id", table_name="experts")
    op.drop_index("idx_experts_status", table_name="experts")
    op.drop_table("experts")
    # ### end Alembic commands ###
