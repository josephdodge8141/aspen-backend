"""create_workflows_tables

Revision ID: 49cd9cf8279f
Revises: 5ff515659d9d
Create Date: 2025-09-02 17:56:12.722508

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '49cd9cf8279f'
down_revision: Union[str, Sequence[str], None] = '5ff515659d9d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workflows',
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('input_params', sa.JSON(), nullable=True),
    sa.Column('is_api', sa.Boolean(), nullable=False),
    sa.Column('cron_schedule', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('nodes',
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('node_type', sa.Enum('job', 'embed', 'guru', 'get_api', 'post_api', 'vector_query', 'filter', 'map', 'if_else', 'for_each', 'merge', 'split', 'advanced', 'return_', 'workflow', name='nodetype'), nullable=False),
    sa.Column('node_metadata', sa.JSON(), nullable=True),
    sa.Column('structured_output', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('node_nodes',
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('parent_id != child_id', name='chk_no_self_edge'),
    sa.ForeignKeyConstraint(['child_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parent_id', 'child_id', name='uq_node_edge_pair')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('node_nodes')
    op.drop_table('nodes')
    op.drop_table('workflows')
    # ### end Alembic commands ###
